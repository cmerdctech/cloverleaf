#!/bin/bash


curl -s http://127.0.0.1:8000/ping > /dev/null
result=$?;
if [ "$result" != "0" ]; then
echo "ALERT: Lightning Pipe Server is not running"
exit $?
fi


if [[ ! $1 || "-h" == "$1"  || "--help" == "$1" ]]; then
echo -e "------------------------------------------ \
\n\ncloverRunner - executes Cloverleaf with supplied specifications. \
\n\n\
\n\ncloverRunner profileName parameterFolderName [all|parameterFileName] [outputPath] \
\n\n\
\n\n\
\tprofileName - configuration file, mainly chooses LP login name, mostly to choose data source \
\n\n\
\tparameterFolderName - directory containing json files with cloverleaf access and transformation instructions, usually this refers to a system that uses cloverleaf \
\n\n\
\tparameterFileName - optional parameter, if omitted (or spec'd with string 'all') defaults to all files in the directory are processed, if present only files that match that pattern are processed (eg, name* will result in nameA and nameB being processed but not someotherName) \
\n\n\
\toutputPath - optional parameter, if omitted, data is stored in test output director, if string 'useParameterFileSpec' appears, output spec (file, mysql) in json parameter files is used,  if present all results are put into specified directory. \
\n\n\
\n\n\
\t-h, --help - display this helpful message \
\n\n\
\t--profiles - show a list of available profiles \
\n\n\
\t--parameters [parameterDirectoryName] - show a list of available parameter directories, if parameterDirectoryName is specified, shows the parameterFileNames in that directory \
\n\n\
\n\n\
------------------------------------------ \
"
exit 0
fi

if [[ "--profiles" == "$1" ]]; then
echo -e "cloverRunner profileName parameterFolderName [all|parameterFileName] [outputPath]"
echo -e "Available profiles are:"
ls -l "$CLOVERLEAF_BASE_PATH/config/profile/otherCloverleafIdentities/"
exit 0
fi

if [[ "--parameters" == "$1" ]]; then



if [[ $2 ]]; then
folderName="$2/current/assembledParameterSets/";
promptMessage="Available parameter folders are:";
else
folderName=''
promptMessage="Available parameter folders are:";
fi



echo -e "cloverRunner profileName parameterFolderName [all|parameterFileName] [outputPath]"
echo -e $promptMessage
ls -l "$CLOVERLEAF_BASE_PATH/config/operation/parameterFiles/$folderName"
exit 0
fi

profileName="$1";

tmp=$(echo $profileName | grep ".js$")

if [ ! $tmp ]; then
profileName="$profileName.js";
fi

profilePath="$CLOVERLEAF_BASE_PATH/config/profile/otherCloverleafIdentities/$profileName";

if [ ! -e "$profilePath" ]; then
	echo -e "ERROR: No such file (profilePath: $profileName)";
	exit 1
fi


parameterFolderName="$2";
parameterFolderPath="$CLOVERLEAF_BASE_PATH/config/operation/parameterFiles/$parameterFolderName/current/assembledParameterSets";

if [ ! -d "$parameterFolderPath" ]; then
	echo -e "ERROR: No such folder (parameterFolderPath: $parameterFolderPath)";
	exit 1
fi

parameterFileName="$3";

if [ ! $parameterFileName ]; then
	parameterFileName='all'
fi

if [ "$parameterFileName" = "all" ]; then
	echo -e "ALL";
	parameterFileList=($(ls $parameterFolderPath ))
else
	pushd $parameterFolderPath > /dev/null
	parameterFileList=($(ls $parameterFileName* ))

	if [ "$parameterFileList" = "" ]; then
		echo -e "\n\nERROR: There are no parameter files in the specified location ($parameterFolderPath/$parameterFileName).\n\nPerhaps you didn't run cmAssembleParameterFiles";
		exit $?
	fi
	popd  > /dev/null
fi


overrideDirectory="$4";

if [ ! $overrideDirectory ]; then
	overrideDirectoryString="--overrideParentPath=$dataLinkDir/mainDataDestination/cloverRun/"
elif [ $overrideDirectory == 'useParameterFileSpec' ]; then

	overrideDirectoryString=""
else [ $overrideDirectory ]
	overrideDirectoryString="--overrideParentPath=$overrideDirectory"
fi


echo -e "\ncp $profilePath $CLOVERLEAF_BASE_PATH/config/cloverleaf.js\n\n"
cp $profilePath $CLOVERLEAF_BASE_PATH/config/profile/cloverleaf.js


for parameterFileName in ${parameterFileList[*]}; do

echo -e "\n\$cloverleaf  --saveDB --file=$parameterFolderPath/$parameterFileName $overrideDirectoryString";
$cloverleaf  --saveDB --file=$parameterFolderPath/$parameterFileName $overrideDirectoryString

done

exit $?